#*******************************************************************************
# INPUTS.2D.BUBBLE
#*******************************************************************************
#NOTE: You may set *either* max_step or stop_time, or you may set them both.

# Maximum number of coarse grid timesteps to be taken, if stop_time is
#  not reached first.
max_step 		= 10

# Time at which calculation stops, if max_step is not reached first.
stop_time 		= 1.0

# Number of cells in each coordinate direction at the coarsest level
amr.n_cell 		= 64 64 
#amr.max_grid_size	= 32

# Interval (in number of coarse timesteps) between checkpoint(restart) files
amr.check_int		= -10 

# Interval (in number of coarse timesteps) between plot files
amr.plot_int		= 10

#********************
# Algorithm options *
#********************
# for debugging
#ns.init_iter = 0
#ns.init_vel_iter = 0
#ns.do_init_proj = 0

ns.do_mom_diff=1
ns.do_cons_trac=1
ns.do_scalminmax       = 1
ns.use_godunov         = true # Use MOL if false, default is to use godunov

#**************
# AMR options *
#**************
# Refinement criterion, use vorticity and presence of tracer
amr.refinement_indicators = tracer vorticity

amr.tracer.value_greater = 0.1
amr.tracer.field_name = tracer

amr.vorticity.vorticity_greater = 1.0

# Maximum level (defaults to 0 for single level calculation)
amr.max_level		= 2 # maximum number of levels of refinement

# Interval (in number of level l timesteps) between regridding
amr.regrid_int		= 2 

# Refinement ratio as a function of level
amr.ref_ratio		= 2 2 2 2

#************
# Verbosity *
#************
# Sets the "NavierStokes" code to be verbose
#ns.v                    = 1

#diffuse.v 		= 1
#nodal_proj.verbose= 1
#nodal_proj.verbose =2

# Sets the "amr" code to be verbose
amr.v                   = 1

#****************
# Time stepping *
#****************
# CFL number to be used in calculating the time step : dt = dx / max(velocity)
ns.cfl                  = 0.5  # CFL number used to set dt

# Factor by which the first time is shrunk relative to CFL constraint
ns.init_shrink          = 0.3  # factor which multiplies the very first time step

#**********
# Physics *
#**********
# Viscosity coefficient 
ns.vel_visc_coef        = 0.001

# Diffusion coefficient for first scalar
ns.scal_diff_coefs      = 0.001

# Forcing term defaults to  rho * abs(gravity) "down"
ns.gravity              = -9.8

#***********
# Geometry *
#***********
# Set to 0 if x-y coordinate system, set to 1 if r-z.
geometry.coord_sys   =  0

# Physical dimensions of the low end of the domain.
geometry.prob_lo     =  -1. 0. 

# Physical dimensions of the high end of the domain.
geometry.prob_hi     =  1. 2. 

#Set to 1 if periodic in that direction
geometry.is_periodic =  0 0

# Boundary conditions on the low end of the domain.
ns.lo_bc             = 4 4  

# Boundary conditions on the high end of the domain.
ns.hi_bc             = 4 2

# 0 = Interior/Periodic  3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# Embedded Boundary options
#eb2.geom_type    =  all_regular
eb2.geom_type     = sphere
eb2.sphere_radius = 0.05
eb2.sphere_center =  -0.001  1.20
eb2.sphere_has_fluid_inside = 0

# Reditribution method for small cells
ns.redistribution_type = FluxRedist

#*********************
# Initial Conditions *
#*********************
# Problem parameters
prob.probtype = 2
prob.blob_center = 0.0 1.5 
prob.blob_radius = 0.2
# Background density is 1. Density is incresed by a factor of density_ic inside
# the bubble
prob.density_ic = 2.0

#mag_vort is stepping out of bounds
#amr.derive_plot_vars    = mag_vort   diveru   avg_pressure