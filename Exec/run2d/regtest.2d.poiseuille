#*******************************************************************************
# INPUTS.2D.POISEUILLE
#*******************************************************************************

#NOTE: You may set *either* max_step or stop_time, or you may set them both.

# Maximum number of coarse grid timesteps to be taken, if stop_time is
#  not reached first.
max_step 				= 10

# Time at which calculation stops, if max_step is not reached first.
stop_time 				= -1

# Tolerance for assuming system has reached steady-state
ns.stop_when_steady 	= 1
ns.steady_tol 		= 1.0e-5

#*******************************************************************************

# Number of cells in each coordinate direction at the coarsest level
amr.n_cell 			= 128 64  

#*******************************************************************************
# Algorithm options *
#********************
ns.do_cons_trac		    = 1
ns.do_trac2		    = 1
ns.do_cons_trac2	    = 1
ns.do_mom_diff              = 1
ns.use_godunov              = true # Use MOL if false, default is to use godunov
godunov.use_ppm             = true
godunov.use_forces_in_trans = true

#*******************************************************************************

# Maximum level (defaults to 0 for single level calculation)
amr.max_level			= 1 # maximum number of levels of refinement

# Refinement criterion, use temperature
amr.refinement_indicators = tracer

amr.tracer.value_greater = .01
amr.tracer.field_name = tracer

#*******************************************************************************

# Set verbosity
ns.v               = 10
nodal_proj.verbose = 0
nodal_proj.verbose            = 0
diffuse.v          = 0
amr.v              = 1

#*******************************************************************************

# Interval (in number of coarse timesteps) between checkpoint(restart) files
amr.check_int			= -1

#*******************************************************************************

# Interval (in number of coarse timesteps) between plot files
amr.plot_int			= 10

#*******************************************************************************

# CFL number to be used in calculating the time step : dt = dx / max(velocity)
ns.cfl                  = 0.5  # CFL number used to set dt

#*******************************************************************************

# Factor by which the first time is shrunk relative to CFL constraint
ns.init_shrink          = 0.3  # factor which multiplies the very first time step

#*******************************************************************************

# Viscosity coefficient 
ns.vel_visc_coef        = 1.0

#*******************************************************************************

# Diffusion coefficient for tracer
ns.scal_diff_coefs      = 0.0 0.0

#*******************************************************************************

# Forcing term defaults to  rho * abs(gravity) "down"
ns.gravity              = 1.0  

#*******************************************************************************

# Set to 0 if x-y coordinate system, set to 1 if r-z.
geometry.coord_sys   	=  0

#*******************************************************************************

# Physical dimensions of the low end of the domain.
geometry.prob_lo     	=  0. 0. 

# Physical dimensions of the high end of the domain.
geometry.prob_hi     	=  2. 1. 

#*******************************************************************************

#Set to 1 if periodic in that direction
geometry.is_periodic 	=  0 0

#*******************************************************************************

# Boundary conditions on the low end of the domain.
#ns.lo_bc             	= 1 5 

# Boundary conditions on the high end of the domain.
#ns.hi_bc             	= 2 5   

# 0 = Interior/Periodic  3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# Boundary conditions
ylo.type                =   "nsw"
ylo.velocity            =   0.  0.  0.
yhi.type                =   "nsw"
yhi.velocity            =   0.  0.  0.
xlo.type                =   "mass_inflow"
xlo.velocity            =   1.  0.  0.
xlo.density             =   1.
xlo.tracer              =   0.
xlo.tracer2             =   1.
xhi.type                =   "pressure_outflow"
xhi.pressure            =   0.0


#*******************************************************************************

# PROBLEM PARAMETERS           
prob.probtype = 4
prob.blob_center =  0.15 0.5 0.5
prob.blob_radius =  0.1
# Constant density initial condition
prob.density_ic = 1.0
# Set up constant flow
prob.velocity_ic = 1.0 0. 0.

#*******************************************************************************

# Continue from checkpoint 
# amr.restart 			= chk00000

#*******************************************************************************

# Write all derived quantities to plot files
amr.derive_plot_vars    = NONE

#*******************************************************************************
