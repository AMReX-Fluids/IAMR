---
name: CUDA

on:
  push:
  pull_request:
  schedule:
    - cron: "23 8 * * *"

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-CUDA
  cancel-in-progress: true

jobs:
  cuda_eb_2d:
    name: CUDA EB 2D
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout IAMR
      uses: actions/checkout@v3
      with:
        path: IAMR
    - name: Checkout AMReX-Hydro
      uses: actions/checkout@v3
      with:
        repository: AMReX-Codes/AMReX-Hydro
        path: AMReX-Hydro
    - name: Checkout AMReX
      uses: actions/checkout@v3
      with:
        repository: AMReX-Codes/amrex
        path: amrex
    - name: Set Up Cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/ccache
        key: ccache-${{ github.workflow }}-${{ github.job }}-git-${{ github.sha }}
        restore-keys: |
             ccache-${{ github.workflow }}-${{ github.job }}-git-
    - name: Load Dependencies
      run: |
        amrex/.github/workflows/dependencies/dependencies_nvcc.sh 11.2
        amrex/.github/workflows/dependencies/dependencies_ccache.sh
    - name: Build
      run: |
        export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
        export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
        nvcc --version
        g++ --version

        export CCACHE_COMPRESS=1
        export CCACHE_COMPRESSLEVEL=10
        export CCACHE_MAXSIZE=500M
        ccache -z

        cd IAMR/Exec/eb_run2d
        make -j 2 USE_CUDA=TRUE USE_CCACHE=TRUE \
            WARN_ALL=TRUE WARN_ERROR=TRUE EXTRACXXFLAGS="-Wno-null-dereference"

        ccache -s
        du -hs ~/.cache/ccache

  cuda_no_eb_2d:
    name: CUDA NO EB 2D
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout IAMR
      uses: actions/checkout@v3
      with:
        path: IAMR
    - name: Checkout AMReX-Hydro
      uses: actions/checkout@v3
      with:
        repository: AMReX-Codes/AMReX-Hydro
        path: AMReX-Hydro
    - name: Checkout AMReX
      uses: actions/checkout@v3
      with:
        repository: AMReX-Codes/amrex
        path: amrex
    - name: Set Up Cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/ccache
        key: ccache-${{ github.workflow }}-${{ github.job }}-git-${{ github.sha }}
        restore-keys: |
             ccache-${{ github.workflow }}-${{ github.job }}-git-
    - name: Load Dependencies
      run: |
        amrex/.github/workflows/dependencies/dependencies_nvcc.sh 11.2
        amrex/.github/workflows/dependencies/dependencies_ccache.sh
    - name: Build
      run: |
        export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
        export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
        nvcc --version
        g++ --version

        export CCACHE_COMPRESS=1
        export CCACHE_COMPRESSLEVEL=10
        export CCACHE_MAXSIZE=400M
        ccache -z

        cd IAMR/Exec/run2d
        make -j 2 USE_CUDA=TRUE USE_CCACHE=TRUE \
            WARN_ALL=TRUE WARN_ERROR=TRUE EXTRACXXFLAGS="-Wno-null-dereference"

        ccache -s
        du -hs ~/.cache/ccache

  save_pr_number:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Save PR number
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          echo $PR_NUMBER > pr_number.txt
      - uses: actions/upload-artifact@v3
        with:
          name: pr_number
          path: pr_number.txt
          retention-days: 1
